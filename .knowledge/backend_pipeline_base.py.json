{"is_source_file": true, "format": "Python", "description": "This file defines core data structures, interfaces, and pipeline orchestration logic for a processing pipeline, including pipeline context, data containers, stages, and pipeline control flow.", "external_files": [], "external_methods": [], "published": ["PipelineContext", "PipelineData", "StageResult", "PipelineStage", "Pipeline"], "classes": [{"name": "PipelineContext", "description": "Shared, mutable context dictionary for pipeline execution, used to store configuration, model handles, and runtime state."}, {"name": "PipelineData", "description": "Container for data flowing between pipeline stages, including frame info, detections, poses, behaviors, events, and metadata."}, {"name": "StageResult", "description": "Result wrapper returned by each pipeline stage, encapsulating updated data, emitted outputs, and continuation flag."}, {"name": "PipelineStage", "description": "Abstract base class for a pipeline stage, requiring implementation of 'process' and optional resource lifecycle methods."}, {"name": "Pipeline", "description": "Orchestrates a sequence of stages, managing their execution, data passing, and lifecycle."}], "methods": [{"name": "Any get(self, key: str, default: Any = None)", "description": "Retrieve a value from configuration or state with state taking precedence.", "scope": "PipelineContext", "scopeKind": "class"}, {"name": "None set(self, key: str, value: Any, in_state: bool = True)", "description": "Set a value in either the state or configuration dictionary.", "scope": "PipelineContext", "scopeKind": "class"}, {"name": "None on_open(self, context: PipelineContext)", "description": "Hook called before the first process() to initialize resources.", "scope": "PipelineStage", "scopeKind": "class"}, {"name": "StageResult process(self, data: PipelineData, context: PipelineContext)", "description": "Abstract method to process data and return a StageResult; must be implemented by subclasses.", "scope": "PipelineStage", "scopeKind": "class"}, {"name": "None on_close(self, context: PipelineContext)", "description": "Hook called after processing to release resources or save state.", "scope": "PipelineStage", "scopeKind": "class"}, {"name": "None open(self)", "description": "Initialize all stages via their on_open() method.", "scope": "Pipeline", "scopeKind": "class"}, {"name": "None close(self)", "description": "Finalize all stages via their on_close() method.", "scope": "Pipeline", "scopeKind": "class"}, {"name": "Tuple[PipelineData,List[Dict[str,Any]]] run_step(self, data: PipelineData)", "description": "Execute one step of the pipeline with current data, returning updated data and emitted outputs.", "scope": "Pipeline", "scopeKind": "class"}, {"name": "__init__(self, stages: Sequence[PipelineStage], context: Optional[PipelineContext] = None)", "scope": "Pipeline", "scopeKind": "class", "description": "unavailable"}], "calls": ["stage.on_open", "stage.process", "stage.on_close"], "search-terms": ["PipelineContext", "PipelineData", "PipelineStage", "StageResult", "pipeline orchestration", "pipeline steps", "data flow", "abc.ABC", "pipeline lifecycle"], "state": 2, "file_id": 16, "knowledge_revision": 59, "git_revision": "", "revision_history": [{"51": ""}, {"59": ""}], "ctags": [{"_type": "tag", "name": "Pipeline", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^class Pipeline:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PipelineContext", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^class PipelineContext:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PipelineData", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^class PipelineData:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PipelineStage", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^class PipelineStage(abc.ABC):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "StageResult", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^class StageResult:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def __init__(self, stages: Sequence[PipelineStage], context: Optional[PipelineContext] = Non/", "language": "Python", "kind": "member", "signature": "(self, stages: Sequence[PipelineStage], context: Optional[PipelineContext] = None)", "scope": "Pipeline", "scopeKind": "class"}, {"_type": "tag", "name": "behaviors", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    behaviors: List[Dict[str, Any]] = field(default_factory=list)$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "close", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def close(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "Pipeline", "scopeKind": "class"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    config: Dict[str, Any] = field(default_factory=dict)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "PipelineContext", "scopeKind": "class"}, {"_type": "tag", "name": "continue_pipeline", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    continue_pipeline: bool = True$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "StageResult", "scopeKind": "class"}, {"_type": "tag", "name": "detections", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    detections: List[Dict[str, Any]] = field(default_factory=list)$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "emit", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    emit: List[Dict[str, Any]] = field(default_factory=list)$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable", "scope": "StageResult", "scopeKind": "class"}, {"_type": "tag", "name": "events", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    events: List[Dict[str, Any]] = field(default_factory=list)$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "frame", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    frame: Any = None$/", "language": "Python", "typeref": "typename:Any", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "frame_index", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    frame_index: Optional[int] = None$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "frame_ts", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    frame_ts: Optional[float] = None$/", "language": "Python", "typeref": "typename:Optional[float]", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def get(self, key: str, default: Any = None) -> Any:$/", "language": "Python", "typeref": "typename:Any", "kind": "member", "signature": "(self, key: str, default: Any = None)", "scope": "PipelineContext", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    meta: Dict[str, Any] = field(default_factory=dict)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "on_close", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def on_close(self, context: PipelineContext) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, context: PipelineContext)", "scope": "PipelineStage", "scopeKind": "class"}, {"_type": "tag", "name": "on_open", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def on_open(self, context: PipelineContext) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, context: PipelineContext)", "scope": "PipelineStage", "scopeKind": "class"}, {"_type": "tag", "name": "open", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def open(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "Pipeline", "scopeKind": "class"}, {"_type": "tag", "name": "poses", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    poses: List[Dict[str, Any]] = field(default_factory=list)$/", "language": "Python", "typeref": "typename:List[Dict[str, Any]]", "kind": "variable", "scope": "PipelineData", "scopeKind": "class"}, {"_type": "tag", "name": "process", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def process(self, data: PipelineData, context: PipelineContext) -> StageResult:$/", "language": "Python", "typeref": "typename:StageResult", "kind": "member", "signature": "(self, data: PipelineData, context: PipelineContext)", "scope": "PipelineStage", "scopeKind": "class"}, {"_type": "tag", "name": "run_step", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def run_step(self, data: PipelineData) -> Tuple[PipelineData, List[Dict[str, Any]]]:$/", "language": "Python", "typeref": "typename:Tuple[PipelineData,List[Dict[str,Any]]]", "kind": "member", "signature": "(self, data: PipelineData)", "scope": "Pipeline", "scopeKind": "class"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    def set(self, key: str, value: Any, in_state: bool = True) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, key: str, value: Any, in_state: bool = True)", "scope": "PipelineContext", "scopeKind": "class"}, {"_type": "tag", "name": "state", "path": "/home/kavia/workspace/code-generation/bear-data-viewer-157938-157962/backend/pipeline/base.py", "pattern": "/^    state: Dict[str, Any] = field(default_factory=dict)$/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "PipelineContext", "scopeKind": "class"}], "hash": "ed101631f5da146dacd688474ebe9ebb", "format-version": 4, "code-base-name": "backend", "filename": "backend/pipeline/base.py", "fields": [{"name": "List[Dict[str, Any]] behaviors", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] config", "scope": "PipelineContext", "scopeKind": "class", "description": "unavailable"}, {"name": "bool continue_pipeline", "scope": "StageResult", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Dict[str, Any]] detections", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Dict[str, Any]] emit", "scope": "StageResult", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Dict[str, Any]] events", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "Any frame", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[int] frame_index", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[float] frame_ts", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] meta", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Dict[str, Any]] poses", "scope": "PipelineData", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] state", "scope": "PipelineContext", "scopeKind": "class", "description": "unavailable"}]}